Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **))
  -> INLINE: (173,5) usage(const char *)
  -> (189,3) initialise(const char *, const char *, t_param *, s_speed *, s_speed *, int **, float **, m_info *)
  -> INLINE: (203,22) nb_unoccupied_cells(const t_param, s_speed *, int *, m_info)
  -> INLINE: (209,19) timestep(const t_param, s_speed *, s_speed *, int *, m_info, int)
    -> INLINE: (339,5) accelerate_flow(const t_param, const s_speed *__restrict__, const int *, m_info)
    -> INLINE: (341,3) exchange_halos(const t_param, const s_speed *, s_speed *, m_info)
    -> (343,18) pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int)
  -> (219,3) collate_data(const t_param, s_speed *, m_info)
  -> INLINE: (221,3) collate_vels(const t_param, float **, m_info)
  -> (255,5) initialise_global_obstacles(const char *, t_param *, int **)
  -> (256,5) write_values(const t_param, s_speed *, int *, float *)
  -> INLINE: (259,3) finalise(const t_param *, s_speed *, s_speed *, int **, float **)
    -> INLINE: (1026,6) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1027,6) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1037,5) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (1038,5) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: OpenMP optimizations [openmp]

d2q9-bgk.c(316:3-316:3):OMP:main:  OpenMP DEFINED LOOP WAS PARALLELIZED
d2q9-bgk.c(378:3-378:3):OMP:main:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(1023,14) inlined into d2q9-bgk.c(259,3)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(317,3) inlined into d2q9-bgk.c(203,22)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(320,5) inlined into d2q9-bgk.c(203,22)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(320,5) inlined into d2q9-bgk.c(203,22)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(378,3) inlined into d2q9-bgk.c(209,19)
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at d2q9-bgk.c(378,3) inlined into d2q9-bgk.c(209,19)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(203,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(203,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(209,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(209,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(339,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(339,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(343,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(343,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(346,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(347,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(348,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(219,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(219,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(221,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(221,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(256,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(154,1):remark #34051: REGISTER ALLOCATION : [main] d2q9-bgk.c:154

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     706
            Global    :     115
            Local     :     591
        Regenerable   :     207
        Spilled       :      27
        
    Routine stack
        Variables     :     592 bytes*
            Reads     :     129 [6.60e+02 ~ 18.0%]
            Writes    :      81 [1.70e+02 ~ 4.6%]
        Spills        :     256 bytes*
            Reads     :      58 [3.37e+01 ~ 0.9%]
            Writes    :      48 [2.92e+01 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int))


    Report from: OpenMP optimizations [openmp]

d2q9-bgk.c(433:3-433:3):OMP:pro_re_col_av:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(544,53)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ d2q9-bgk.c(553,7) ]
   remark #25261: Invariant Condition eliminated(Proven True) at line 453

   LOOP BEGIN at d2q9-bgk.c(439,5)
      remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 453 
      remark #25260: Invariant Condition eliminated(Proven False) at line 453
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED

      LOOP BEGIN at d2q9-bgk.c(530,9)
         remark #25436: completely unrolled by 4   (pre-vector) 
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(541,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(439,5)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(408,1):remark #34051: REGISTER ALLOCATION : [pro_re_col_av] d2q9-bgk.c:408

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1245
            Global    :     197
            Local     :    1048
        Regenerable   :      97
        Spilled       :      79
        
    Routine stack
        Variables     :     508 bytes*
            Reads     :      42 [5.59e+00 ~ 0.0%]
            Writes    :      43 [3.29e+01 ~ 0.2%]
        Spills        :     760 bytes*
            Reads     :     156 [1.38e+03 ~ 7.5%]
            Writes    :     107 [7.80e+02 ~ 4.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: collate_data(const t_param, s_speed *, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (collate_data(const t_param, s_speed *, m_info))
  -> INLINE: (641,45) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (654,7) compute_rank_info(int, int, m_info *, t_param)
  -> INLINE: (681,9) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(638,5)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(651,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at d2q9-bgk.c(651,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(679,17)
   remark #25436: completely unrolled by 9  
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(675,20):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(676,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(677,20):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(632,73):remark #34051: REGISTER ALLOCATION : [collate_data] d2q9-bgk.c:632

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm14]
        
    Routine temporaries
        Total         :     230
            Global    :      59
            Local     :     171
        Regenerable   :      44
        Spilled       :       5
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      24 [2.01e+01 ~ 4.6%]
            Writes    :      23 [1.11e+01 ~ 2.6%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: write_values(const t_param, s_speed *, int *, float *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (write_values(const t_param, s_speed *, int *, float *))
  -> INLINE: (1095,5) die(const char *, const int, const char *)
  -> INLINE: (1151,5) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(1098,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(1100,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(1113,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1082,1):remark #34051: REGISTER ALLOCATION : [write_values] d2q9-bgk.c:1082

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :     157
            Global    :      37
            Local     :     120
        Regenerable   :      47
        Spilled       :      11
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      48 bytes*
            Reads     :       6 [4.83e+01 ~ 3.3%]
            Writes    :       6 [1.26e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: compute_rank_info(int, int, m_info *, t_param)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compute_rank_info(int, int, m_info *, t_param))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(270,77):remark #34051: REGISTER ALLOCATION : [compute_rank_info] d2q9-bgk.c:270

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      29
            Global    :      14
            Local     :      15
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: nb_unoccupied_cells(const t_param, s_speed *, int *, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (nb_unoccupied_cells(const t_param, s_speed *, int *, m_info))


    Report from: OpenMP optimizations [openmp]

d2q9-bgk.c(316:3-316:3):OMP:nb_unoccupied_cells:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(317,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(320,5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(320,5)
   <Remainder>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(312,1):remark #34051: REGISTER ALLOCATION : [nb_unoccupied_cells] d2q9-bgk.c:312

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :     169
            Global    :      34
            Local     :     135
        Regenerable   :      67
        Spilled       :       1
        
    Routine stack
        Variables     :      36 bytes*
            Reads     :       8 [1.90e+00 ~ 0.5%]
            Writes    :      11 [3.88e+01 ~ 9.2%]
        Spills        :      56 bytes*
            Reads     :      20 [6.00e+00 ~ 1.4%]
            Writes    :      19 [1.30e+01 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: timestep(const t_param, s_speed *, s_speed *, int *, m_info, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (timestep(const t_param, s_speed *, s_speed *, int *, m_info, int))
  -> (339,5) accelerate_flow(const t_param, const s_speed *__restrict__, const int *, m_info)
  -> INLINE: (341,3) exchange_halos(const t_param, const s_speed *, s_speed *, m_info)
  -> (343,18) pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(339,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(339,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(343,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(343,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(346,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(347,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(348,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(336,1):remark #34051: REGISTER ALLOCATION : [timestep] d2q9-bgk.c:336

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :      93
            Global    :      18
            Local     :      75
        Regenerable   :      30
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [1.00e+00 ~ 0.2%]
            Writes    :       1 [1.00e+00 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: accelerate_flow(const t_param, const s_speed *__restrict__, const int *, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (accelerate_flow(const t_param, const s_speed *__restrict__, const int *, m_info))


    Report from: OpenMP optimizations [openmp]

d2q9-bgk.c(378:3-378:3):OMP:accelerate_flow:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(378,3)
   remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at d2q9-bgk.c(378,3)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(359,122):remark #34051: REGISTER ALLOCATION : [accelerate_flow] d2q9-bgk.c:359

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     267
            Global    :      55
            Local     :     212
        Regenerable   :      62
        Spilled       :      16
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :      10 [2.60e+01 ~ 3.2%]
        Spills        :     168 bytes*
            Reads     :      31 [2.31e+01 ~ 2.8%]
            Writes    :      27 [2.59e+01 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: collate_vels(const t_param, float **, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (collate_vels(const t_param, float **, m_info))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(697,74):remark #34051: REGISTER ALLOCATION : [collate_vels] d2q9-bgk.c:697

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rsi rdi r8-r9 r15]
        
    Routine temporaries
        Total         :      24
            Global    :       9
            Local     :      15
        Regenerable   :       7
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: exchange_halos(const t_param, const s_speed *, s_speed *, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (exchange_halos(const t_param, const s_speed *, s_speed *, m_info))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(726,101):remark #34051: REGISTER ALLOCATION : [exchange_halos] d2q9-bgk.c:726

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :      52
            Global    :      12
            Local     :      40
        Regenerable   :      18
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: av_velocity(const t_param, s_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (av_velocity(const t_param, s_speed *, int *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(778,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(780,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(788,9)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(770,1):remark #34051: REGISTER ALLOCATION : [av_velocity] d2q9-bgk.c:770

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   28[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :      78
            Global    :      21
            Local     :      57
        Regenerable   :       5
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       7 [9.90e+00 ~ 1.1%]
            Writes    :       7 [9.90e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: finalise(const t_param *, s_speed *, s_speed *, int **, float **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (finalise(const t_param *, s_speed *, s_speed *, int **, float **))
  -> INLINE: (1026,6) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1027,6) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1037,5) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1038,5) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(1023,14)
   remark #25436: completely unrolled by 9  
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1019,1):remark #34051: REGISTER ALLOCATION : [finalise] d2q9-bgk.c:1019

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r8 r12-r13 r15]
        
    Routine temporaries
        Total         :      57
            Global    :      11
            Local     :      46
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: calc_reynolds(const t_param, s_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_reynolds(const t_param, s_speed *, int *))
  -> INLINE: (1057,10) av_velocity(const t_param, s_speed *, int *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(778,3) inlined into d2q9-bgk.c(1057,10)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(780,5) inlined into d2q9-bgk.c(1057,10)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(788,9) inlined into d2q9-bgk.c(1057,10)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1054,1):remark #34051: REGISTER ALLOCATION : [calc_reynolds] d2q9-bgk.c:1054

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm14]
        
    Routine temporaries
        Total         :      85
            Global    :      22
            Local     :      63
        Regenerable   :       7
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       7 [9.90e+00 ~ 1.0%]
            Writes    :       7 [9.90e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: total_density(const t_param, const s_speed *__restrict__)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (total_density(const t_param, const s_speed *__restrict__))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(1068,7)
   remark #25444: Loopnest Interchanged: ( 1 2 3 ) --> ( 3 1 2 )

   LOOP BEGIN at d2q9-bgk.c(1064,3)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(1066,5)
         remark #15301: PERMUTED LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(1066,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1061,1):remark #34051: REGISTER ALLOCATION : [total_density] d2q9-bgk.c:1061

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbp rsi rdi r8-r12 zmm0-zmm3]
        
    Routine temporaries
        Total         :      33
            Global    :      22
            Local     :      11
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: die(const char *, const int, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (die(const char *, const int, const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1165,1):remark #34051: REGISTER ALLOCATION : [die] d2q9-bgk.c:1165

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbx rsi rdi]
        
    Routine temporaries
        Total         :      28
            Global    :       1
            Local     :      27
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: usage(const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (usage(const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1173,1):remark #34051: REGISTER ALLOCATION : [usage] d2q9-bgk.c:1173

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       0
            Local     :      15
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initialise(const char *, const char *, t_param *, s_speed *, s_speed *, int **, float **, m_info *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialise(const char *, const char *, t_param *, s_speed *, s_speed *, int **, float **, m_info *))
  -> INLINE: (842,5) die(const char *, const int, const char *)
  -> INLINE: (848,20) die(const char *, const int, const char *)
  -> INLINE: (852,20) die(const char *, const int, const char *)
  -> INLINE: (856,20) die(const char *, const int, const char *)
  -> INLINE: (860,20) die(const char *, const int, const char *)
  -> INLINE: (864,20) die(const char *, const int, const char *)
  -> INLINE: (868,20) die(const char *, const int, const char *)
  -> INLINE: (872,20) die(const char *, const int, const char *)
  -> INLINE: (883,3) compute_rank_info(int, int, m_info *, t_param)
  -> INLINE: (905,38) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (910,34) die(const char *, const int, const char *)
  -> INLINE: (916,42) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (921,38) die(const char *, const int, const char *)
  -> INLINE: (925,31) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (929,31) die(const char *, const int, const char *)
  -> INLINE: (978,5) die(const char *, const int, const char *)
  -> INLINE: (986,22) die(const char *, const int, const char *)
  -> INLINE: (988,40) die(const char *, const int, const char *)
  -> INLINE: (990,40) die(const char *, const int, const char *)
  -> INLINE: (992,23) die(const char *, const int, const char *)


    Report from: OpenMP optimizations [openmp]

d2q9-bgk.c(937:3-937:3):OMP:initialise:  OpenMP DEFINED LOOP WAS PARALLELIZED
d2q9-bgk.c(962:3-962:3):OMP:initialise:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(902,14)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(913,14)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(938,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(941,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(941,5)
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(941,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(941,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(963,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(966,5)
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(966,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(829,1):remark #34051: REGISTER ALLOCATION : [initialise] d2q9-bgk.c:829

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   21[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     957
            Global    :     172
            Local     :     785
        Regenerable   :     358
        Spilled       :      17
        
    Routine stack
        Variables     :    1140 bytes*
            Reads     :      72 [7.72e+01 ~ 2.3%]
            Writes    :      15 [4.70e+01 ~ 1.4%]
        Spills        :     184 bytes*
            Reads     :      48 [1.17e+02 ~ 3.5%]
            Writes    :      38 [8.46e+01 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initialise_global_obstacles(const char *, t_param *, int **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialise_global_obstacles(const char *, t_param *, int **))
  -> INLINE: (570,5) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (571,29) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (578,31) die(const char *, const int, const char *)
  -> INLINE: (603,5) die(const char *, const int, const char *)
  -> INLINE: (610,22) die(const char *, const int, const char *)
  -> INLINE: (612,40) die(const char *, const int, const char *)
  -> INLINE: (614,40) die(const char *, const int, const char *)
  -> INLINE: (616,23) die(const char *, const int, const char *)


    Report from: OpenMP optimizations [openmp]

d2q9-bgk.c(581:3-581:3):OMP:initialise_global_obstacles:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(582,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(585,5)
      remark #15301: OpenMP SIMD LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(585,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(567,96):remark #34051: REGISTER ALLOCATION : [initialise_global_obstacles] d2q9-bgk.c:567

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r14 zmm0]
        
    Routine temporaries
        Total         :     271
            Global    :      41
            Local     :     230
        Regenerable   :     136
        Spilled       :       0
        
    Routine stack
        Variables     :    1080 bytes*
            Reads     :      12 [2.87e+01 ~ 2.9%]
            Writes    :       7 [2.30e+01 ~ 2.3%]
        Spills        :      48 bytes*
            Reads     :      12 [6.00e+00 ~ 0.6%]
            Writes    :      12 [1.20e+01 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
