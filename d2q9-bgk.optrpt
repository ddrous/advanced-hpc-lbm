Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **))
  -> INLINE: (161,5) usage(const char *)
  -> (174,3) init_params(const char *, t_param *)
  -> INLINE: (175,3) init_m_info(m_info *, const t_param, int, int)
  -> INLINE: (176,3) initialise(const char *, t_param, t_speed **, t_speed **, int **, float **, m_info, t_speed **)
    -> INLINE: (706,27) die(const char *, const int, const char *)
    -> INLINE: (709,31) die(const char *, const int, const char *)
    -> INLINE: (712,35) die(const char *, const int, const char *)
    -> INLINE: (716,42) die(const char *, const int, const char *)
    -> INLINE: (719,46) die(const char *, const int, const char *)
    -> INLINE: (722,50) die(const char *, const int, const char *)
    -> INLINE: (728,31) die(const char *, const int, const char *)
    -> INLINE: (804,5) die(const char *, const int, const char *)
    -> INLINE: (811,22) die(const char *, const int, const char *)
    -> INLINE: (813,39) die(const char *, const int, const char *)
    -> INLINE: (815,39) die(const char *, const int, const char *)
    -> INLINE: (817,23) die(const char *, const int, const char *)
  -> INLINE: (183,22) nb_unoccupied_cells(const t_param, t_speed *, int *, m_info)
  -> INLINE: (200,7) accelerate_flow(const t_param, t_speed *__restrict__, const int *__restrict__, m_info)
  -> INLINE: (204,5) exchange_halos(const t_param, const t_speed *, t_speed *, m_info)
  -> (206,25) pro_reb_col_avg(const t_param, t_speed *__restrict__, t_speed *__restrict__, const int *__restrict__, m_info, int)
  -> INLINE: (272,43) calc_reynolds(const t_param, t_speed *, int *)
    -> INLINE: (869,10) av_velocity(const t_param, t_speed *, int *)
  -> (277,5) write_values(const t_param, t_speed *, int *, float *)
  -> INLINE: (281,3) finalise(const t_param *, t_speed **, t_speed **, int **, float **, t_speed **)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(297,3) inlined into d2q9-bgk.c(183,22)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(737,3) inlined into d2q9-bgk.c(176,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(740,5) inlined into d2q9-bgk.c(176,3)
      remark #15301: SIMD LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(789,3) inlined into d2q9-bgk.c(176,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(792,5) inlined into d2q9-bgk.c(176,3)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(792,5) inlined into d2q9-bgk.c(176,3)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(792,5) inlined into d2q9-bgk.c(176,3)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(192,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(548,3) inlined into d2q9-bgk.c(200,7)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(548,3) inlined into d2q9-bgk.c(200,7)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(548,3) inlined into d2q9-bgk.c(200,7)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(339,3) inlined into d2q9-bgk.c(204,5)
      remark #25460: No loop optimizations reported
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(355,3) inlined into d2q9-bgk.c(204,5)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(246,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(246,3)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at d2q9-bgk.c(246,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(262,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at d2q9-bgk.c(262,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at d2q9-bgk.c(262,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(584,3) inlined into d2q9-bgk.c(272,43)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(587,5) inlined into d2q9-bgk.c(272,43)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(587,5) inlined into d2q9-bgk.c(272,43)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1

      LOOP BEGIN at d2q9-bgk.c(597,9) inlined into d2q9-bgk.c(272,43)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(587,5) inlined into d2q9-bgk.c(272,43)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(844,3) inlined into d2q9-bgk.c(281,3)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(298,3) inlined into d2q9-bgk.c(183,22)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(301,5) inlined into d2q9-bgk.c(183,22)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(301,5) inlined into d2q9-bgk.c(183,22)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

Fusion of IFs performed in main at line 247

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(734:34)::main:  Assume directive not useful: removing

Assume directive not useful: removing

Assume directive not useful: removing

Assume directive not useful: removing

Assume directive not useful: removing

d2q9-bgk.c(175,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(176,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(183,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(200,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(204,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(206,25):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(206,25):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(209,20):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (64, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(210,15):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (64, 0), and destination (alignment, offset): (64, 0)
d2q9-bgk.c(211,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (64, 0)
d2q9-bgk.c(272,43):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(277,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(137,1):remark #34051: REGISTER ALLOCATION : [main] d2q9-bgk.c:137

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1914
            Global    :     507
            Local     :    1407
        Regenerable   :     340
        Spilled       :      96
        
    Routine stack
        Variables     :    1312 bytes*
            Reads     :     100 [3.24e+00 ~ 3.2%]
            Writes    :      43 [5.44e-01 ~ 0.5%]
        Spills        :     792 bytes*
            Reads     :     202 [4.24e+00 ~ 4.2%]
            Writes    :     177 [4.66e+00 ~ 4.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: pro_reb_col_avg(const t_param, t_speed *__restrict__, t_speed *__restrict__, const int *__restrict__, m_info, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (pro_reb_col_avg(const t_param, t_speed *__restrict__, t_speed *__restrict__, const int *__restrict__, m_info, int))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(411,3)
   remark #25261: Invariant Condition eliminated(Proven True) at line 419

   LOOP BEGIN at d2q9-bgk.c(414,5)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 11
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(414,5)
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 10
      remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 419 
      remark #25260: Invariant Condition eliminated(Proven False) at line 419
      remark #15301: SIMD LOOP WAS VECTORIZED

      LOOP BEGIN at d2q9-bgk.c(436,7)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(414,5)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 11
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(398,1):remark #34051: REGISTER ALLOCATION : [pro_reb_col_avg] d2q9-bgk.c:398

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     924
            Global    :     112
            Local     :     812
        Regenerable   :      29
        Spilled       :     118
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :    1080 bytes*
            Reads     :     189 [1.12e+01 ~ 11.2%]
            Writes    :     147 [6.19e+00 ~ 6.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: write_values(const t_param, t_speed *, int *, float *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (write_values(const t_param, t_speed *, int *, float *))
  -> INLINE: (907,5) die(const char *, const int, const char *)
  -> INLINE: (967,5) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(912,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(915,5)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1

      LOOP BEGIN at d2q9-bgk.c(929,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(894,1):remark #34051: REGISTER ALLOCATION : [write_values] d2q9-bgk.c:894

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm13]
        
    Routine temporaries
        Total         :     345
            Global    :     123
            Local     :     222
        Regenerable   :      51
        Spilled       :      26
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     232 bytes*
            Reads     :      23 [6.18e+00 ~ 6.2%]
            Writes    :      22 [3.07e+00 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: nb_unoccupied_cells(const t_param, t_speed *, int *, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (nb_unoccupied_cells(const t_param, t_speed *, int *, m_info))


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(297,3)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(298,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(301,5)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(301,5)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(293,1):remark #34051: REGISTER ALLOCATION : [nb_unoccupied_cells] d2q9-bgk.c:293

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     179
            Global    :      33
            Local     :     146
        Regenerable   :      73
        Spilled       :       2
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       7 [4.87e-01 ~ 0.5%]
            Writes    :       9 [6.55e+00 ~ 6.5%]
        Spills        :      64 bytes*
            Reads     :      20 [3.36e+00 ~ 3.4%]
            Writes    :      20 [6.28e+00 ~ 6.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: exchange_halos(const t_param, const t_speed *, t_speed *, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (exchange_halos(const t_param, const t_speed *, t_speed *, m_info))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(335,101):remark #34051: REGISTER ALLOCATION : [exchange_halos] d2q9-bgk.c:335

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r13]
        
    Routine temporaries
        Total         :      48
            Global    :      10
            Local     :      38
        Regenerable   :      16
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: timestep(const t_param, t_speed *, t_speed *, int *, m_info, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (timestep(const t_param, t_speed *, t_speed *, int *, m_info, int))
  -> INLINE: (379,5) accelerate_flow(const t_param, t_speed *__restrict__, const int *__restrict__, m_info)
  -> INLINE: (383,3) exchange_halos(const t_param, const t_speed *, t_speed *, m_info)
  -> (385,12) pro_reb_col_avg(const t_param, t_speed *__restrict__, t_speed *__restrict__, const int *__restrict__, m_info, int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(548,3) inlined into d2q9-bgk.c(379,5)
<Peeled loop for vectorization>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at d2q9-bgk.c(548,3) inlined into d2q9-bgk.c(379,5)
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at d2q9-bgk.c(548,3) inlined into d2q9-bgk.c(379,5)
<Remainder loop for vectorization>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(385,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(385,12):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(389,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(390,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(391,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(375,1):remark #34051: REGISTER ALLOCATION : [timestep] d2q9-bgk.c:375

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :     357
            Global    :     126
            Local     :     231
        Regenerable   :      31
        Spilled       :      10
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       7 [6.33e-02 ~ 0.1%]
            Writes    :       7 [6.33e-02 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: av_velocity(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (av_velocity(const t_param, t_speed *, int *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(584,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(587,5)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(587,5)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1

      LOOP BEGIN at d2q9-bgk.c(597,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(587,5)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(573,1):remark #34051: REGISTER ALLOCATION : [av_velocity] d2q9-bgk.c:573

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm13]
        
    Routine temporaries
        Total         :     488
            Global    :     152
            Local     :     336
        Regenerable   :       9
        Spilled       :      13
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     104 bytes*
            Reads     :      18 [7.93e-01 ~ 0.8%]
            Writes    :      18 [7.05e-01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: finalise(const t_param *, t_speed **, t_speed **, int **, float **, t_speed **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (finalise(const t_param *, t_speed **, t_speed **, int **, float **, t_speed **))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(844,3)
   remark #25436: completely unrolled by 9  
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(840,1):remark #34051: REGISTER ALLOCATION : [finalise] d2q9-bgk.c:840

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r14]
        
    Routine temporaries
        Total         :     130
            Global    :      11
            Local     :     119
        Regenerable   :       1
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: calc_reynolds(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_reynolds(const t_param, t_speed *, int *))
  -> INLINE: (869,10) av_velocity(const t_param, t_speed *, int *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(584,3) inlined into d2q9-bgk.c(869,10)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(587,5) inlined into d2q9-bgk.c(869,10)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(587,5) inlined into d2q9-bgk.c(869,10)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1

      LOOP BEGIN at d2q9-bgk.c(597,9) inlined into d2q9-bgk.c(869,10)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(587,5) inlined into d2q9-bgk.c(869,10)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(866,1):remark #34051: REGISTER ALLOCATION : [calc_reynolds] d2q9-bgk.c:866

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     495
            Global    :     153
            Local     :     342
        Regenerable   :      11
        Spilled       :      13
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     104 bytes*
            Reads     :      18 [7.91e-01 ~ 0.8%]
            Writes    :      18 [7.04e-01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: total_density(const t_param, t_speed *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (total_density(const t_param, t_speed *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(883,7)
   remark #25444: Loopnest Interchanged: ( 1 2 3 ) --> ( 3 1 2 )

   LOOP BEGIN at d2q9-bgk.c(879,3)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(881,5)
         remark #15301: PERMUTED LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(881,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(873,1):remark #34051: REGISTER ALLOCATION : [total_density] d2q9-bgk.c:873

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rbx rbp rsi rdi r8-r11 r14-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :      37
            Global    :      24
            Local     :      13
        Regenerable   :       3
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: die(const char *, const int, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (die(const char *, const int, const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(981,1):remark #34051: REGISTER ALLOCATION : [die] d2q9-bgk.c:981

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbx rsi rdi]
        
    Routine temporaries
        Total         :      28
            Global    :       1
            Local     :      27
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: usage(const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (usage(const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(989,1):remark #34051: REGISTER ALLOCATION : [usage] d2q9-bgk.c:989

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       0
            Local     :      15
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initialise(const char *, t_param, t_speed **, t_speed **, int **, float **, m_info, t_speed **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialise(const char *, t_param, t_speed **, t_speed **, int **, float **, m_info, t_speed **))
  -> INLINE: (706,27) die(const char *, const int, const char *)
  -> INLINE: (709,31) die(const char *, const int, const char *)
  -> INLINE: (712,35) die(const char *, const int, const char *)
  -> INLINE: (716,42) die(const char *, const int, const char *)
  -> INLINE: (719,46) die(const char *, const int, const char *)
  -> INLINE: (722,50) die(const char *, const int, const char *)
  -> INLINE: (728,31) die(const char *, const int, const char *)
  -> INLINE: (804,5) die(const char *, const int, const char *)
  -> INLINE: (811,22) die(const char *, const int, const char *)
  -> INLINE: (813,39) die(const char *, const int, const char *)
  -> INLINE: (815,39) die(const char *, const int, const char *)
  -> INLINE: (817,23) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(737,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(740,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(740,5)
      remark #15301: SIMD LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(740,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(789,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(792,5)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(792,5)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(792,5)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(679,1):remark #34051: REGISTER ALLOCATION : [initialise] d2q9-bgk.c:679

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     567
            Global    :      90
            Local     :     477
        Regenerable   :     193
        Spilled       :      12
        
    Routine stack
        Variables     :    1036 bytes*
            Reads     :       3 [3.71e-01 ~ 0.4%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      48 bytes*
            Reads     :       8 [2.09e-01 ~ 0.2%]
            Writes    :       8 [1.49e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: init_params(const char *, t_param *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (init_params(const char *, t_param *))
  -> INLINE: (639,5) die(const char *, const int, const char *)
  -> INLINE: (645,20) die(const char *, const int, const char *)
  -> INLINE: (649,20) die(const char *, const int, const char *)
  -> INLINE: (653,20) die(const char *, const int, const char *)
  -> INLINE: (657,20) die(const char *, const int, const char *)
  -> INLINE: (661,20) die(const char *, const int, const char *)
  -> INLINE: (665,20) die(const char *, const int, const char *)
  -> INLINE: (669,20) die(const char *, const int, const char *)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(630,1):remark #34051: REGISTER ALLOCATION : [init_params] d2q9-bgk.c:630

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :     216
            Global    :      27
            Local     :     189
        Regenerable   :     119
        Spilled       :       3
        
    Routine stack
        Variables     :    1024 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: init_m_info(m_info *, const t_param, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (init_m_info(m_info *, const t_param, int, int))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(313,79):remark #34051: REGISTER ALLOCATION : [init_m_info] d2q9-bgk.c:313

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      29
            Global    :      12
            Local     :      17
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
