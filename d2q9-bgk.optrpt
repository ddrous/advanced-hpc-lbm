Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **))
  -> INLINE: (177,5) usage(const char *)
  -> (194,3) initialise(const char *, const char *, t_param *, s_speed *, s_speed *, int **, decimal **, m_info *)
  -> INLINE: (205,17) nb_unoccupied_cells(const t_param, s_speed *, int *)
  -> INLINE: (211,19) timestep(const t_param, s_speed *, s_speed *, int *, m_info, int)
    -> INLINE: (335,5) accelerate_flow(const t_param, const s_speed *__restrict__, const int *, m_info)
    -> INLINE: (339,3) exchange_halos(const t_param, const s_speed *, s_speed *, m_info)
    -> (343,20) pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int)
  -> (227,3) collate_data(const t_param, s_speed *, m_info)
  -> INLINE: (229,3) collate_vels(const t_param, decimal **, m_info)
  -> (260,5) write_values(const t_param, s_speed *, int *, decimal *)
  -> INLINE: (263,3) finalise(const t_param *, s_speed *, s_speed *, int **, decimal **)
    -> INLINE: (983,6) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (984,6) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (994,5) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (995,5) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: OpenMP optimizations [openmp]

d2q9-bgk.c(277:3-277:3):OMP:main:  OpenMP DEFINED LOOP WAS PARALLELIZED
d2q9-bgk.c(379:3-379:3):OMP:main:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(980,14) inlined into d2q9-bgk.c(263,3)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(278,3) inlined into d2q9-bgk.c(205,17)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(281,5) inlined into d2q9-bgk.c(205,17)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(281,5) inlined into d2q9-bgk.c(205,17)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(379,3) inlined into d2q9-bgk.c(211,19)
   remark #15301: peel loop WAS VECTORIZED
LOOP END

LOOP BEGIN at d2q9-bgk.c(379,3) inlined into d2q9-bgk.c(211,19)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(205,17):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(211,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(211,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(335,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(335,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(343,20):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(343,20):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(348,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(349,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(350,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(227,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(227,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(229,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(229,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(260,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(159,1):remark #34051: REGISTER ALLOCATION : [main] d2q9-bgk.c:159

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     702
            Global    :     115
            Local     :     587
        Regenerable   :     207
        Spilled       :      28
        
    Routine stack
        Variables     :     552 bytes*
            Reads     :     129 [6.64e+02 ~ 19.4%]
            Writes    :      76 [1.32e+02 ~ 3.9%]
        Spills        :     264 bytes*
            Reads     :      59 [4.81e+01 ~ 1.4%]
            Writes    :      48 [2.95e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int))


    Report from: OpenMP optimizations [openmp]

d2q9-bgk.c(436:3-436:3):OMP:pro_re_col_av:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(550,53)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ d2q9-bgk.c(560,7) ]
   remark #25261: Invariant Condition eliminated(Proven True) at line 456

   LOOP BEGIN at d2q9-bgk.c(443,5)
      remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 456 
      remark #25260: Invariant Condition eliminated(Proven False) at line 456
      remark #15301: peel loop WAS VECTORIZED

      LOOP BEGIN at d2q9-bgk.c(536,9)
         remark #25436: completely unrolled by 4   (pre-vector) 
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(547,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(443,5)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(408,1):remark #34051: REGISTER ALLOCATION : [pro_re_col_av] d2q9-bgk.c:408

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1245
            Global    :     197
            Local     :    1048
        Regenerable   :      97
        Spilled       :      79
        
    Routine stack
        Variables     :     508 bytes*
            Reads     :      42 [5.59e+00 ~ 0.0%]
            Writes    :      43 [3.29e+01 ~ 0.2%]
        Spills        :     760 bytes*
            Reads     :     156 [1.38e+03 ~ 7.5%]
            Writes    :     107 [7.80e+02 ~ 4.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: collate_data(const t_param, s_speed *, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (collate_data(const t_param, s_speed *, m_info))
  -> INLINE: (612,48) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (622,7) compute_rank_info(int, int, m_info *, t_param)
  -> INLINE: (647,9) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(609,5)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(619,5)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at d2q9-bgk.c(619,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(641,5)
   remark #25436: completely unrolled by 9  
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(642,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(643,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(644,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(642,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(643,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(644,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(642,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(643,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(644,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(642,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(643,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(644,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(642,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(643,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(644,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(642,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(643,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(644,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(642,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(643,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(644,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(642,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(643,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(644,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(642,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(643,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(644,23):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(572,73):remark #34051: REGISTER ALLOCATION : [collate_data] d2q9-bgk.c:572

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm14]
        
    Routine temporaries
        Total         :     314
            Global    :      60
            Local     :     254
        Regenerable   :      44
        Spilled       :       7
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      63 [3.96e+01 ~ 7.6%]
            Writes    :      63 [3.11e+01 ~ 6.0%]
        Spills        :      24 bytes*
            Reads     :       8 [4.50e+00 ~ 0.9%]
            Writes    :       2 [1.50e+00 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: write_values(const t_param, s_speed *, int *, decimal *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (write_values(const t_param, s_speed *, int *, decimal *))
  -> INLINE: (1047,5) die(const char *, const int, const char *)
  -> INLINE: (1103,5) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(1050,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(1052,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(1065,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1034,1):remark #34051: REGISTER ALLOCATION : [write_values] d2q9-bgk.c:1034

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :     157
            Global    :      37
            Local     :     120
        Regenerable   :      47
        Spilled       :      11
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      48 bytes*
            Reads     :       6 [4.83e+01 ~ 3.3%]
            Writes    :       6 [1.26e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: nb_unoccupied_cells(const t_param, s_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (nb_unoccupied_cells(const t_param, s_speed *, int *))


    Report from: OpenMP optimizations [openmp]

d2q9-bgk.c(277:3-277:3):OMP:nb_unoccupied_cells:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(278,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(281,5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(281,5)
   <Remainder>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(272,1):remark #34051: REGISTER ALLOCATION : [nb_unoccupied_cells] d2q9-bgk.c:272

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     157
            Global    :      31
            Local     :     126
        Regenerable   :      61
        Spilled       :       0
        
    Routine stack
        Variables     :      36 bytes*
            Reads     :       8 [1.90e+00 ~ 0.5%]
            Writes    :      11 [3.88e+01 ~ 9.2%]
        Spills        :      48 bytes*
            Reads     :      18 [6.00e+00 ~ 1.4%]
            Writes    :      18 [1.20e+01 ~ 2.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: compute_rank_info(int, int, m_info *, t_param)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compute_rank_info(int, int, m_info *, t_param))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(292,77):remark #34051: REGISTER ALLOCATION : [compute_rank_info] d2q9-bgk.c:292

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      29
            Global    :      13
            Local     :      16
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: timestep(const t_param, s_speed *, s_speed *, int *, m_info, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (timestep(const t_param, s_speed *, s_speed *, int *, m_info, int))
  -> (335,5) accelerate_flow(const t_param, const s_speed *__restrict__, const int *, m_info)
  -> INLINE: (339,3) exchange_halos(const t_param, const s_speed *, s_speed *, m_info)
  -> (343,20) pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(335,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(335,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(343,20):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(343,20):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(348,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(349,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(350,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(332,1):remark #34051: REGISTER ALLOCATION : [timestep] d2q9-bgk.c:332

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :     108
            Global    :      18
            Local     :      90
        Regenerable   :      45
        Spilled       :       8
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 0.4%]
            Writes    :       2 [2.00e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: accelerate_flow(const t_param, const s_speed *__restrict__, const int *, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (accelerate_flow(const t_param, const s_speed *__restrict__, const int *, m_info))


    Report from: OpenMP optimizations [openmp]

d2q9-bgk.c(379:3-379:3):OMP:accelerate_flow:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(379,3)
   remark #15301: peel loop WAS VECTORIZED
LOOP END

LOOP BEGIN at d2q9-bgk.c(379,3)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(359,122):remark #34051: REGISTER ALLOCATION : [accelerate_flow] d2q9-bgk.c:359

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     267
            Global    :      55
            Local     :     212
        Regenerable   :      62
        Spilled       :      16
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :      10 [2.60e+01 ~ 3.2%]
        Spills        :     168 bytes*
            Reads     :      31 [2.31e+01 ~ 2.8%]
            Writes    :      27 [2.59e+01 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: collate_vels(const t_param, decimal **, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (collate_vels(const t_param, decimal **, m_info))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(661,76):remark #34051: REGISTER ALLOCATION : [collate_vels] d2q9-bgk.c:661

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rsi rdi r8-r9 r15]
        
    Routine temporaries
        Total         :      24
            Global    :       9
            Local     :      15
        Regenerable   :       7
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: exchange_halos(const t_param, const s_speed *, s_speed *, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (exchange_halos(const t_param, const s_speed *, s_speed *, m_info))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(687,101):remark #34051: REGISTER ALLOCATION : [exchange_halos] d2q9-bgk.c:687

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :      52
            Global    :      12
            Local     :      40
        Regenerable   :      18
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: av_velocity(const t_param, s_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (av_velocity(const t_param, s_speed *, int *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(738,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(740,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(748,9)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(730,1):remark #34051: REGISTER ALLOCATION : [av_velocity] d2q9-bgk.c:730

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   28[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :      78
            Global    :      21
            Local     :      57
        Regenerable   :       5
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       7 [9.90e+00 ~ 1.1%]
            Writes    :       7 [9.90e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: finalise(const t_param *, s_speed *, s_speed *, int **, decimal **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (finalise(const t_param *, s_speed *, s_speed *, int **, decimal **))
  -> INLINE: (983,6) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (984,6) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (994,5) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (995,5) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(980,14)
   remark #25436: completely unrolled by 9  
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(976,1):remark #34051: REGISTER ALLOCATION : [finalise] d2q9-bgk.c:976

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r8 r12-r13 r15]
        
    Routine temporaries
        Total         :      57
            Global    :      11
            Local     :      46
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: calc_reynolds(const t_param, s_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_reynolds(const t_param, s_speed *, int *))
  -> INLINE: (1012,10) av_velocity(const t_param, s_speed *, int *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(738,3) inlined into d2q9-bgk.c(1012,10)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(740,5) inlined into d2q9-bgk.c(1012,10)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(748,9) inlined into d2q9-bgk.c(1012,10)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1009,1):remark #34051: REGISTER ALLOCATION : [calc_reynolds] d2q9-bgk.c:1009

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm14]
        
    Routine temporaries
        Total         :      85
            Global    :      22
            Local     :      63
        Regenerable   :       7
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       7 [9.90e+00 ~ 1.0%]
            Writes    :       7 [9.90e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: total_density(const t_param, const s_speed *__restrict__)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (total_density(const t_param, const s_speed *__restrict__))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(1023,7)
   remark #25444: Loopnest Interchanged: ( 1 2 3 ) --> ( 3 1 2 )

   LOOP BEGIN at d2q9-bgk.c(1019,3)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(1021,5)
         remark #15301: PARTIAL LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(1021,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1016,1):remark #34051: REGISTER ALLOCATION : [total_density] d2q9-bgk.c:1016

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbp rsi rdi r8-r12 zmm0-zmm3]
        
    Routine temporaries
        Total         :      33
            Global    :      22
            Local     :      11
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: die(const char *, const int, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (die(const char *, const int, const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1117,1):remark #34051: REGISTER ALLOCATION : [die] d2q9-bgk.c:1117

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbx rsi rdi]
        
    Routine temporaries
        Total         :      28
            Global    :       1
            Local     :      27
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: usage(const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (usage(const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1125,1):remark #34051: REGISTER ALLOCATION : [usage] d2q9-bgk.c:1125

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       0
            Local     :      15
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initialise(const char *, const char *, t_param *, s_speed *, s_speed *, int **, decimal **, m_info *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialise(const char *, const char *, t_param *, s_speed *, s_speed *, int **, decimal **, m_info *))
  -> INLINE: (800,5) die(const char *, const int, const char *)
  -> INLINE: (806,20) die(const char *, const int, const char *)
  -> INLINE: (810,20) die(const char *, const int, const char *)
  -> INLINE: (814,20) die(const char *, const int, const char *)
  -> INLINE: (818,20) die(const char *, const int, const char *)
  -> INLINE: (822,20) die(const char *, const int, const char *)
  -> INLINE: (826,20) die(const char *, const int, const char *)
  -> INLINE: (830,20) die(const char *, const int, const char *)
  -> INLINE: (841,3) compute_rank_info(int, int, m_info *, t_param)
  -> INLINE: (868,40) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (873,34) die(const char *, const int, const char *)
  -> INLINE: (879,44) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (884,38) die(const char *, const int, const char *)
  -> INLINE: (889,31) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (891,31) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (895,31) die(const char *, const int, const char *)
  -> INLINE: (943,5) die(const char *, const int, const char *)
  -> INLINE: (950,22) die(const char *, const int, const char *)
  -> INLINE: (952,40) die(const char *, const int, const char *)
  -> INLINE: (954,40) die(const char *, const int, const char *)
  -> INLINE: (956,23) die(const char *, const int, const char *)


    Report from: OpenMP optimizations [openmp]

d2q9-bgk.c(902:3-902:3):OMP:initialise:  OpenMP DEFINED LOOP WAS PARALLELIZED
d2q9-bgk.c(927:3-927:3):OMP:initialise:  OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(865,14)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(876,14)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(903,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(906,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(906,5)
      remark #15301: peel loop WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(906,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(906,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(928,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(931,5)
      remark #15301: peel loop WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(931,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(787,1):remark #34051: REGISTER ALLOCATION : [initialise] d2q9-bgk.c:787

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   21[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     962
            Global    :     169
            Local     :     793
        Regenerable   :     362
        Spilled       :      17
        
    Routine stack
        Variables     :    1148 bytes*
            Reads     :      75 [8.09e+01 ~ 2.4%]
            Writes    :      15 [4.70e+01 ~ 1.4%]
        Spills        :     184 bytes*
            Reads     :      48 [1.17e+02 ~ 3.5%]
            Writes    :      38 [8.46e+01 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
