Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.1.132 Build 20161005

Compiler options: -std=c99 -Wall -Ofast -qopt-report=5 -fno-tree-vectorize -mtune=native -lm -o d2q9-bgk

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: true
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **)) [1/14=7.1%] d2q9-bgk.c(125,1)
  -> INLINE: (139,5) usage(const char *) (isz = 6) (sz = 10)
    -> EXTERN: (746,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (747,3) exit(int)
  -> EXTERN: (148,3) gettimeofday(struct timeval *__restrict__, __timezone_ptr_t)
  -> INLINE: (151,3) initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **) (isz = 699) (sz = 718)
    -> EXTERN: (462,8) fopen(const char *__restrict__, const char *__restrict__)
    -> EXTERN: (466,5) sprintf(char *__restrict__, const char *__restrict__, ...)
    -> INLINE: (467,5) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (471,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
    -> INLINE: (473,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (475,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
    -> INLINE: (477,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (479,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
    -> INLINE: (481,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (483,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
    -> INLINE: (485,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (487,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
    -> INLINE: (489,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (491,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
    -> INLINE: (493,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (495,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
    -> INLINE: (497,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (500,3) fclose(FILE *)
    -> EXTERN: (522,26) malloc(size_t)
    -> INLINE: (524,27) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (527,30) malloc(size_t)
    -> INLINE: (529,31) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (532,20) malloc(size_t)
    -> INLINE: (534,31) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (570,8) fopen(const char *__restrict__, const char *__restrict__)
    -> EXTERN: (574,5) sprintf(char *__restrict__, const char *__restrict__, ...)
    -> INLINE: (575,5) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (579,20) fscanf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (579,20) fscanf(FILE *__restrict__, const char *__restrict__, ...)
    -> INLINE: (582,22) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> INLINE: (584,40) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> INLINE: (586,40) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> INLINE: (588,23) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (595,3) fclose(FILE *)
    -> EXTERN: (601,26) malloc(size_t)
  -> EXTERN: (154,3) gettimeofday(struct timeval *__restrict__, __timezone_ptr_t)
  -> INLINE: (160,5) timestep(const t_param, t_speed *, t_speed *, int *) (isz = 445) (sz = 458)
    -> INLINE: (196,3) accelerate_flow(const t_param, t_speed *, int *) (isz = 135) (sz = 146)
    -> INLINE: (197,3) propagate(const t_param, t_speed *, t_speed *) (isz = 161) (sz = 172)
    -> INLINE: (198,3) rebound(const t_param, t_speed *, t_speed *, int *) (isz = 132) (sz = 145)
    -> (199,3) collision(const t_param, t_speed *, t_speed *, int *) (isz = 374) (sz = 387)
       [[ Inlining would exceed -inline-max-total-size value (2117>2000) <1>]]
  -> INLINE: (161,19) av_velocity(const t_param, t_speed *, int *) (isz = 153) (sz = 164)
  -> EXTERN: (170,3) gettimeofday(struct timeval *__restrict__, __timezone_ptr_t)
  -> EXTERN: (177,3) gettimeofday(struct timeval *__restrict__, __timezone_ptr_t)
  -> EXTERN: (182,3) printf(const char *__restrict__, ...)
  -> EXTERN: (183,3) printf(const char *__restrict__, ...)
  -> INLINE: (183,41) calc_reynolds(const t_param, t_speed *, int *) (isz = 163) (sz = 174)
    -> INLINE: (632,10) av_velocity(const t_param, t_speed *, int *) (isz = 153) (sz = 164)
  -> EXTERN: (184,3) printf(const char *__restrict__, ...)
  -> EXTERN: (185,3) printf(const char *__restrict__, ...)
  -> EXTERN: (186,3) printf(const char *__restrict__, ...)
  -> EXTERN: (187,3) printf(const char *__restrict__, ...)
  -> INLINE: (188,3) write_values(const t_param, t_speed *, int *, float *) (isz = 263) (sz = 276)
    -> EXTERN: (663,8) fopen(const char *__restrict__, const char *__restrict__)
    -> INLINE: (667,5) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (713,7) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (717,3) fclose(FILE *)
    -> EXTERN: (719,8) fopen(const char *__restrict__, const char *__restrict__)
    -> INLINE: (723,5) die(const char *, const int, const char *) (isz = 14) (sz = 22)
      -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
      -> EXTERN: (740,3) fflush(FILE *)
      -> EXTERN: (741,3) exit(int)
    -> EXTERN: (728,5) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (731,3) fclose(FILE *)
  -> INLINE: (189,3) finalise(const t_param *, t_speed **, t_speed **, int **, float **) (isz = 14) (sz = 29)
    -> EXTERN: (612,3) free(void *)
    -> EXTERN: (615,3) free(void *)
    -> EXTERN: (618,3) free(void *)
    -> EXTERN: (621,3) free(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(541,3) inlined into d2q9-bgk.c(151,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

   LOOP BEGIN at d2q9-bgk.c(543,5) inlined into d2q9-bgk.c(151,3)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

      LOOP BEGIN at d2q9-bgk.c(553,9) inlined into d2q9-bgk.c(151,3)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 4  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(561,3) inlined into d2q9-bgk.c(151,3)
   remark #15382: vectorization support: call to function ?1memset cannot be vectorized   [ d2q9-bgk.c(565,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between obstacles[ii+jj*params.nx] (565:9) and obstacles[ii+jj*params.nx] (565:9)
   remark #15346: vector dependence: assumed OUTPUT dependence between obstacles[ii+jj*params.nx] (565:9) and obstacles[ii+jj*params.nx] (565:9)

   LOOP BEGIN at d2q9-bgk.c(563,5) inlined into d2q9-bgk.c(151,3)
      remark #25408: memset generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at d2q9-bgk.c(563,5) inlined into d2q9-bgk.c(151,3)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25439: unrolled with remainder by 2  
         remark #25015: Estimate of max trip count of loop=24
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(563,5) inlined into d2q9-bgk.c(151,3)
      <Remainder>
         remark #25015: Estimate of max trip count of loop=24
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(579,3) inlined into d2q9-bgk.c(151,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at d2q9-bgk.c(158,3)
   remark #25261: Invariant Condition eliminated(Proven True) at line 248
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at d2q9-bgk.c(212,3) inlined into d2q9-bgk.c(160,5)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(241,5) inlined into d2q9-bgk.c(160,5)
      remark #25261: Invariant Condition eliminated(Proven True) at line 247
      remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 248 
      remark #25260: Invariant Condition eliminated(Proven False) at line 248
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(239,3) inlined into d2q9-bgk.c(160,5)
      remark #25101: Loop Interchange not done due to: Original Order seems proper
      remark #25452: Original Order found to be proper, but by a close margin
      remark #25261: Invariant Condition eliminated(Proven True) at line 248
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between tmp_cells->speeds[ii+jj*params.nx][0] (252:7) and tmp_cells->speeds[ii+jj*params.nx][0] (252:7)
      remark #15346: vector dependence: assumed OUTPUT dependence between tmp_cells->speeds[ii+jj*params.nx][0] (252:7) and tmp_cells->speeds[ii+jj*params.nx][0] (252:7)

      LOOP BEGIN at d2q9-bgk.c(241,5) inlined into d2q9-bgk.c(160,5)
         remark #25427: Loop Statements Reordered
         remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 247 
         remark #25260: Invariant Condition eliminated(Proven False) at line 247
         remark #25258: Invariant Condition eliminated(Loop at level 3 peeled) at line 248 
         remark #25260: Invariant Condition eliminated(Proven False) at line 248
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(270,3) inlined into d2q9-bgk.c(160,5)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

      LOOP BEGIN at d2q9-bgk.c(272,5) inlined into d2q9-bgk.c(160,5)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(409,3) inlined into d2q9-bgk.c(161,19)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between tot_cells (443:11) and tot_cells (411:17)
      remark #15346: vector dependence: assumed ANTI dependence between tot_cells (411:17) and tot_cells (443:11)
      remark #15346: vector dependence: assumed ANTI dependence between tot_cells (411:17) and tot_cells (443:11)
      remark #15346: vector dependence: assumed FLOW dependence between tot_cells (443:11) and tot_cells (411:17)

      LOOP BEGIN at d2q9-bgk.c(411,5) inlined into d2q9-bgk.c(161,19)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

         LOOP BEGIN at d2q9-bgk.c(419,9) inlined into d2q9-bgk.c(161,19)
            remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
            remark #25436: completely unrolled by 9  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(409,3) inlined into d2q9-bgk.c(183,41)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tot_cells (443:11) and tot_cells (411:17)
   remark #15346: vector dependence: assumed ANTI dependence between tot_cells (411:17) and tot_cells (443:11)
   remark #15346: vector dependence: assumed ANTI dependence between tot_cells (411:17) and tot_cells (443:11)
   remark #15346: vector dependence: assumed FLOW dependence between tot_cells (443:11) and tot_cells (411:17)

   LOOP BEGIN at d2q9-bgk.c(411,5) inlined into d2q9-bgk.c(183,41)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

      LOOP BEGIN at d2q9-bgk.c(419,9) inlined into d2q9-bgk.c(183,41)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(670,3) inlined into d2q9-bgk.c(188,3)
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ d2q9-bgk.c(713,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (713:7) and call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (713:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (713:7) and call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (713:7)

   LOOP BEGIN at d2q9-bgk.c(672,5) inlined into d2q9-bgk.c(188,3)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

      LOOP BEGIN at d2q9-bgk.c(685,9) inlined into d2q9-bgk.c(188,3)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(726,3) inlined into d2q9-bgk.c(188,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(565,9):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
d2q9-bgk.c(565,9):remark #34026: call to memset implemented as a call to optimized library version
d2q9-bgk.c(199,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to increase the width of stores
d2q9-bgk.c(199,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(199,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to increase the width of stores
d2q9-bgk.c(199,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(199,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to increase the width of stores
d2q9-bgk.c(199,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(125,1):remark #34051: REGISTER ALLOCATION : [main] d2q9-bgk.c:125

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :    1006
            Global    :     173
            Local     :     833
        Regenerable   :     336
        Spilled       :      41
        
    Routine stack
        Variables     :    1112 bytes*
            Reads     :      41 [7.98e+01 ~ 0.3%]
            Writes    :       9 [3.70e+01 ~ 0.2%]
        Spills        :     288 bytes*
            Reads     :      96 [5.53e+02 ~ 2.3%]
            Writes    :      70 [2.34e+02 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: collision(const t_param, t_speed *, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (collision(const t_param, t_speed *, t_speed *, int *)) [2/14=14.3%] d2q9-bgk.c(297,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(307,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between u[1] (344:9) and u[1] (344:9)
   remark #15346: vector dependence: assumed OUTPUT dependence between u[1] (344:9) and u[1] (344:9)

   LOOP BEGIN at d2q9-bgk.c(309,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between u[5] (348:9) and u[_2+5] (372:9)
      remark #15346: vector dependence: assumed ANTI dependence between u[_2+5] (372:9) and u[5] (348:9)

      LOOP BEGIN at d2q9-bgk.c(317,9)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 9  
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(372,9)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 4  
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(386,9)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(297,1):remark #34051: REGISTER ALLOCATION : [collision] d2q9-bgk.c:297

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rbp rsi rdi r8-r11 r14-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     148
            Global    :      29
            Local     :     119
        Regenerable   :      13
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [1.61e+01 ~ 0.8%]
            Writes    :       5 [1.61e+01 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: timestep(const t_param, t_speed *, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (timestep(const t_param, t_speed *, t_speed *, int *)) [3/14=21.4%] d2q9-bgk.c(195,1)
  -> INLINE: (196,3) accelerate_flow(const t_param, t_speed *, int *) (isz = 135) (sz = 146)
  -> INLINE: (197,3) propagate(const t_param, t_speed *, t_speed *) (isz = 161) (sz = 172)
  -> INLINE: (198,3) rebound(const t_param, t_speed *, t_speed *, int *) (isz = 132) (sz = 145)
  -> (199,3) collision(const t_param, t_speed *, t_speed *, int *) (isz = 374) (sz = 387)
     [[ Inlining would exceed -inline-max-size value (387>230) <2>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(212,3) inlined into d2q9-bgk.c(196,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
LOOP END

LOOP BEGIN at d2q9-bgk.c(241,5) inlined into d2q9-bgk.c(197,3)
   remark #25261: Invariant Condition eliminated(Proven True) at line 247
   remark #25258: Invariant Condition eliminated(Loop at level 1 peeled) at line 248 
   remark #25260: Invariant Condition eliminated(Proven False) at line 248
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
LOOP END

LOOP BEGIN at d2q9-bgk.c(239,3) inlined into d2q9-bgk.c(197,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #25261: Invariant Condition eliminated(Proven True) at line 248
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between tmp_cells->speeds[ii+jj*params.nx][0] (252:7) and tmp_cells->speeds[ii+jj*params.nx][0] (252:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between tmp_cells->speeds[ii+jj*params.nx][0] (252:7) and tmp_cells->speeds[ii+jj*params.nx][0] (252:7)

   LOOP BEGIN at d2q9-bgk.c(241,5) inlined into d2q9-bgk.c(197,3)
      remark #25427: Loop Statements Reordered
      remark #25258: Invariant Condition eliminated(Loop at level 1 peeled) at line 247 
      remark #25260: Invariant Condition eliminated(Proven False) at line 247
      remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 248 
      remark #25260: Invariant Condition eliminated(Proven False) at line 248
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(270,3) inlined into d2q9-bgk.c(198,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

   LOOP BEGIN at d2q9-bgk.c(272,5) inlined into d2q9-bgk.c(198,3)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(199,3):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to increase the width of loads
d2q9-bgk.c(199,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to increase the width of stores
d2q9-bgk.c(199,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(195,1):remark #34051: REGISTER ALLOCATION : [timestep] d2q9-bgk.c:195

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :     250
            Global    :      48
            Local     :     202
        Regenerable   :      18
        Spilled       :      11
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :      10 [2.02e+01 ~ 0.6%]
            Writes    :      10 [1.75e+01 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: accelerate_flow(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (accelerate_flow(const t_param, t_speed *, int *)) [4/14=28.6%] d2q9-bgk.c(204,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(212,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(204,1):remark #34051: REGISTER ALLOCATION : [accelerate_flow] d2q9-bgk.c:204

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rsi rdi r8-r9 zmm0-zmm8]
        
    Routine temporaries
        Total         :      44
            Global    :      21
            Local     :      23
        Regenerable   :       8
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: propagate(const t_param, t_speed *, t_speed *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (propagate(const t_param, t_speed *, t_speed *)) [5/14=35.7%] d2q9-bgk.c(237,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(241,5)
   remark #25261: Invariant Condition eliminated(Proven True) at line 247
   remark #25258: Invariant Condition eliminated(Loop at level 1 peeled) at line 248 
   remark #25260: Invariant Condition eliminated(Proven False) at line 248
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
LOOP END

LOOP BEGIN at d2q9-bgk.c(239,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #25261: Invariant Condition eliminated(Proven True) at line 248
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between tmp_cells->speeds[ii+jj*params.nx][0] (252:7) and tmp_cells->speeds[ii+jj*params.nx][0] (252:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between tmp_cells->speeds[ii+jj*params.nx][0] (252:7) and tmp_cells->speeds[ii+jj*params.nx][0] (252:7)

   LOOP BEGIN at d2q9-bgk.c(241,5)
      remark #25427: Loop Statements Reordered
      remark #25258: Invariant Condition eliminated(Loop at level 1 peeled) at line 247 
      remark #25260: Invariant Condition eliminated(Proven False) at line 247
      remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 248 
      remark #25260: Invariant Condition eliminated(Proven False) at line 248
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(237,1):remark #34051: REGISTER ALLOCATION : [propagate] d2q9-bgk.c:237

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     195
            Global    :      32
            Local     :     163
        Regenerable   :      10
        Spilled       :       9
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       4 [1.49e+01 ~ 0.5%]
            Writes    :       6 [1.22e+01 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: rebound(const t_param, t_speed *, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (rebound(const t_param, t_speed *, t_speed *, int *)) [6/14=42.9%] d2q9-bgk.c(268,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(270,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

   LOOP BEGIN at d2q9-bgk.c(272,5)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(268,1):remark #34051: REGISTER ALLOCATION : [rebound] d2q9-bgk.c:268

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r11 r13-r15]
        
    Routine temporaries
        Total         :      36
            Global    :      21
            Local     :      15
        Regenerable   :       5
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.50e+00 ~ 1.0%]
            Writes    :       5 [4.50e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: av_velocity(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (av_velocity(const t_param, t_speed *, int *)) [7/14=50.0%] d2q9-bgk.c(401,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(409,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tot_cells (443:11) and tot_cells (411:17)
   remark #15346: vector dependence: assumed ANTI dependence between tot_cells (411:17) and tot_cells (443:11)
   remark #15346: vector dependence: assumed ANTI dependence between tot_cells (411:17) and tot_cells (443:11)

   LOOP BEGIN at d2q9-bgk.c(411,5)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

      LOOP BEGIN at d2q9-bgk.c(419,9)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(401,1):remark #34051: REGISTER ALLOCATION : [av_velocity] d2q9-bgk.c:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rbp rsi rdi r8-r11 r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :      64
            Global    :      22
            Local     :      42
        Regenerable   :       5
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.70e+00 ~ 0.4%]
            Writes    :       3 [2.70e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: finalise(const t_param *, t_speed **, t_speed **, int **, float **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (finalise(const t_param *, t_speed **, t_speed **, int **, float **)) [8/14=57.1%] d2q9-bgk.c(608,1)
  -> EXTERN: (612,3) free(void *)
  -> EXTERN: (615,3) free(void *)
  -> EXTERN: (618,3) free(void *)
  -> EXTERN: (621,3) free(void *)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(608,1):remark #34051: REGISTER ALLOCATION : [finalise] d2q9-bgk.c:608

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r8 r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      10
            Local     :      14
        Regenerable   :       1
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: calc_reynolds(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_reynolds(const t_param, t_speed *, int *)) [9/14=64.3%] d2q9-bgk.c(629,1)
  -> INLINE: (632,10) av_velocity(const t_param, t_speed *, int *) (isz = 153) (sz = 164)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(409,3) inlined into d2q9-bgk.c(632,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between tot_cells (443:11) and tot_cells (411:17)
   remark #15346: vector dependence: assumed ANTI dependence between tot_cells (411:17) and tot_cells (443:11)
   remark #15346: vector dependence: assumed ANTI dependence between tot_cells (411:17) and tot_cells (443:11)

   LOOP BEGIN at d2q9-bgk.c(411,5) inlined into d2q9-bgk.c(632,10)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

      LOOP BEGIN at d2q9-bgk.c(419,9) inlined into d2q9-bgk.c(632,10)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(629,1):remark #34051: REGISTER ALLOCATION : [calc_reynolds] d2q9-bgk.c:629

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rbp rsi rdi r8-r11 r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :      71
            Global    :      23
            Local     :      48
        Regenerable   :       7
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.70e+00 ~ 0.4%]
            Writes    :       3 [2.70e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: total_density(const t_param, t_speed *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (total_density(const t_param, t_speed *)) [10/14=71.4%] d2q9-bgk.c(636,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(639,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

   LOOP BEGIN at d2q9-bgk.c(641,5)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

      LOOP BEGIN at d2q9-bgk.c(643,7)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(636,1):remark #34051: REGISTER ALLOCATION : [total_density] d2q9-bgk.c:636

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8-r11 zmm0]
        
    Routine temporaries
        Total         :      31
            Global    :      18
            Local     :      13
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: write_values(const t_param, t_speed *, int *, float *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (write_values(const t_param, t_speed *, int *, float *)) [11/14=78.6%] d2q9-bgk.c(654,1)
  -> EXTERN: (663,8) fopen(const char *__restrict__, const char *__restrict__)
  -> INLINE: (667,5) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (713,7) fprintf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (717,3) fclose(FILE *)
  -> EXTERN: (719,8) fopen(const char *__restrict__, const char *__restrict__)
  -> INLINE: (723,5) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (728,5) fprintf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (731,3) fclose(FILE *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(670,3)
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ d2q9-bgk.c(713,7) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (713:7) and call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (713:7)
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (713:7) and call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (713:7)

   LOOP BEGIN at d2q9-bgk.c(672,5)
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

      LOOP BEGIN at d2q9-bgk.c(685,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(726,3)
   remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(654,1):remark #34051: REGISTER ALLOCATION : [write_values] d2q9-bgk.c:654

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :     143
            Global    :      38
            Local     :     105
        Regenerable   :      47
        Spilled       :      12
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       7 [5.28e+01 ~ 3.9%]
            Writes    :       7 [1.71e+01 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: die(const char *, const int, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (die(const char *, const int, const char *)) [12/14=85.7%] d2q9-bgk.c(737,1)
  -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (740,3) fflush(FILE *)
  -> EXTERN: (741,3) exit(int)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(737,1):remark #34051: REGISTER ALLOCATION : [die] d2q9-bgk.c:737

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbx rsi rdi]
        
    Routine temporaries
        Total         :      28
            Global    :       1
            Local     :      27
        Regenerable   :       9
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: usage(const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (usage(const char *)) [13/14=92.9%] d2q9-bgk.c(745,1)
  -> EXTERN: (746,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (747,3) exit(int)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(745,1):remark #34051: REGISTER ALLOCATION : [usage] d2q9-bgk.c:745

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       0
            Local     :      15
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)) [14/14=100.0%] d2q9-bgk.c(454,1)
  -> EXTERN: (462,8) fopen(const char *__restrict__, const char *__restrict__)
  -> EXTERN: (466,5) sprintf(char *__restrict__, const char *__restrict__, ...)
  -> INLINE: (467,5) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (471,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> INLINE: (473,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (475,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> INLINE: (477,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (479,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> INLINE: (481,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (483,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> INLINE: (485,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (487,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> INLINE: (489,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (491,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> INLINE: (493,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (495,12) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> INLINE: (497,20) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (500,3) fclose(FILE *)
  -> EXTERN: (522,26) malloc(size_t)
  -> INLINE: (524,27) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (527,30) malloc(size_t)
  -> INLINE: (529,31) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (532,20) malloc(size_t)
  -> INLINE: (534,31) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (570,8) fopen(const char *__restrict__, const char *__restrict__)
  -> EXTERN: (574,5) sprintf(char *__restrict__, const char *__restrict__, ...)
  -> INLINE: (575,5) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (579,20) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> EXTERN: (579,20) fscanf(FILE *__restrict__, const char *__restrict__, ...)
  -> INLINE: (582,22) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> INLINE: (584,40) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> INLINE: (586,40) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> INLINE: (588,23) die(const char *, const int, const char *) (isz = 14) (sz = 22)
    -> EXTERN: (738,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (739,3) fprintf(FILE *__restrict__, const char *__restrict__, ...)
    -> EXTERN: (740,3) fflush(FILE *)
    -> EXTERN: (741,3) exit(int)
  -> EXTERN: (595,3) fclose(FILE *)
  -> EXTERN: (601,26) malloc(size_t)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(541,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between *cells_ptr (553:9) and *cells_ptr (546:9)
   remark #15346: vector dependence: assumed FLOW dependence between *cells_ptr (546:9) and *cells_ptr (553:9)
   remark #15346: vector dependence: assumed FLOW dependence between *cells_ptr (546:9) and *cells_ptr (553:9)
   remark #15346: vector dependence: assumed ANTI dependence between *cells_ptr (553:9) and *cells_ptr (546:9)

   LOOP BEGIN at d2q9-bgk.c(543,5)
   <Distributed chunk1>
      remark #25426: Loop Distributed (6 way) 
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(543,5)
   <Remainder, Distributed chunk1>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(543,5)
   <Distributed chunk2>
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(543,5)
   <Remainder, Distributed chunk2>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(543,5)
   <Distributed chunk3>
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(543,5)
   <Remainder, Distributed chunk3>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(543,5)
   <Distributed chunk4>
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(543,5)
   <Remainder, Distributed chunk4>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(543,5)
   <Distributed chunk5>
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(543,5)
   <Remainder, Distributed chunk5>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(543,5)
   <Distributed chunk6>
      remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag

      LOOP BEGIN at d2q9-bgk.c(553,9)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25436: completely unrolled by 4  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(561,3)
   remark #15382: vectorization support: call to function ?1memset cannot be vectorized   [ d2q9-bgk.c(565,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between obstacles_ptr (565:9) and obstacles_ptr (565:9)
   remark #15346: vector dependence: assumed OUTPUT dependence between obstacles_ptr (565:9) and obstacles_ptr (565:9)

   LOOP BEGIN at d2q9-bgk.c(563,5)
      remark #25408: memset generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at d2q9-bgk.c(563,5)
         remark #15540: loop was not vectorized: auto-vectorization is disabled with -no-vec flag
         remark #25439: unrolled with remainder by 2  
         remark #25015: Estimate of max trip count of loop=24
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(563,5)
      <Remainder>
         remark #25015: Estimate of max trip count of loop=24
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(579,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(565,9):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
d2q9-bgk.c(565,9):remark #34026: call to memset implemented as a call to optimized library version
d2q9-bgk.c(454,1):remark #34051: REGISTER ALLOCATION : [initialise] d2q9-bgk.c:454

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     531
            Global    :      88
            Local     :     443
        Regenerable   :     242
        Spilled       :      13
        
    Routine stack
        Variables     :    1036 bytes*
            Reads     :       3 [1.63e+01 ~ 0.9%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :      12 [4.19e+01 ~ 2.4%]
            Writes    :       8 [1.81e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> Inlining this function at this call site would increase the size of the 
    caller more than is currently acceptable. Use the option 
    -inline-max-total-size to increase the size that all functions can 
    grow through inlining, add "#pragma optimization_parameter 
    inline_max_total_size" to the caller, add "inline 
    __attribute__((always_inline))" to the declaration of the called 
    function, or add "#pragma forceinline" before the call site.

<2> The function is larger than the inliner would normally inline.  Use the
    option -inline-max-size to increase the size of any function that would
    normally be inlined, add "inline __attribute__((always_inline))" to the
    declaration of the called function, or add "#pragma forceinline" before
    the call site.

