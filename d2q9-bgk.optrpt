Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **))
  -> INLINE: (177,5) usage(const char *)
  -> (198,3) initialise(const char *, const char *, t_param *, s_speed *, s_speed *, int **, decimal **)
  -> INLINE: (200,3) compute_rank_info(int, int, m_info *, t_param)
  -> INLINE: (210,19) nb_unoccupied_cells(const t_param, s_speed *, int *)
  -> INLINE: (215,19) timestep(const t_param, s_speed *, s_speed *, int *, m_info, int)
    -> INLINE: (283,5) exchange_halos(const t_param, const s_speed *, s_speed *, m_info)
    -> (287,5) accelerate_flow(const t_param, const s_speed *__restrict__, const int *)
    -> (289,20) pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int)
  -> INLINE: (233,5) collate_data(const t_param, const s_speed *, m_info)
    -> INLINE: (319,7) compute_rank_info(int, int, m_info *, t_param)
  -> INLINE: (236,5) collate_vels(const t_param, decimal **, m_info)
  -> (268,5) write_values(const t_param, s_speed *, int *, decimal *)
  -> INLINE: (271,3) finalise(const t_param *, s_speed *, s_speed *, int **, decimal **)
    -> INLINE: (976,6) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (977,6) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (987,5) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (988,5) _mm_free(void *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(718,3) inlined into d2q9-bgk.c(210,19)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(973,14) inlined into d2q9-bgk.c(271,3)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(719,3) inlined into d2q9-bgk.c(210,19)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(722,5) inlined into d2q9-bgk.c(210,19)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(722,5) inlined into d2q9-bgk.c(210,19)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(200,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(210,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(215,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(287,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(289,20):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(289,20):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(292,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(293,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(294,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(233,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(236,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(236,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(268,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(159,1):remark #34051: REGISTER ALLOCATION : [main] d2q9-bgk.c:159

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :     503
            Global    :      84
            Local     :     419
        Regenerable   :     149
        Spilled       :      18
        
    Routine stack
        Variables     :     428 bytes*
            Reads     :     113 [1.76e+01 ~ 17.6%]
            Writes    :      68 [5.94e+00 ~ 5.9%]
        Spills        :     184 bytes*
            Reads     :      45 [2.29e+00 ~ 2.3%]
            Writes    :      35 [9.64e-01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: accelerate_flow(const t_param, const s_speed *__restrict__, const int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (accelerate_flow(const t_param, const s_speed *__restrict__, const int *))


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(520,3)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(520,3)
   remark #15301: SIMD LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at d2q9-bgk.c(520,3)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(500,104):remark #34051: REGISTER ALLOCATION : [accelerate_flow] d2q9-bgk.c:500

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     251
            Global    :      68
            Local     :     183
        Regenerable   :      59
        Spilled       :      19
        
    Routine stack
        Variables     :      52 bytes*
            Reads     :       4 [0.00e+00 ~ 0.0%]
            Writes    :      10 [4.94e+00 ~ 4.9%]
        Spills        :     192 bytes*
            Reads     :      32 [3.43e+00 ~ 3.4%]
            Writes    :      30 [4.32e+00 ~ 4.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int))


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(576,3)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(583,5)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ d2q9-bgk.c(699,7) ]
   remark #25261: Invariant Condition eliminated(Proven True) at line 593

   LOOP BEGIN at d2q9-bgk.c(583,5)
   <Predicate Optimized v1>
      remark #25422: Invariant Condition at line 592 hoisted out of this loop
      remark #15301: SIMD LOOP WAS VECTORIZED

      LOOP BEGIN at d2q9-bgk.c(675,9)
         remark #25436: completely unrolled by 4   (pre-vector) 
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(686,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(583,5)
   <Remainder loop for vectorization, Predicate Optimized v1>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(583,5)
   <Predicate Optimized v2>
      remark #15301: SIMD LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(583,5)
   <Remainder loop for vectorization, Predicate Optimized v2>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(548,1):remark #34051: REGISTER ALLOCATION : [pro_re_col_av] d2q9-bgk.c:548

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    3090
            Global    :    1029
            Local     :    2061
        Regenerable   :     118
        Spilled       :     146
        
    Routine stack
        Variables     :     960 bytes*
            Reads     :     551 [8.75e+00 ~ 8.7%]
            Writes    :      69 [1.24e+00 ~ 1.2%]
        Spills        :    1320 bytes*
            Reads     :     379 [5.24e+00 ~ 5.2%]
            Writes    :     188 [1.25e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: write_values(const t_param, s_speed *, int *, decimal *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (write_values(const t_param, s_speed *, int *, decimal *))
  -> INLINE: (1040,5) die(const char *, const int, const char *)
  -> INLINE: (1096,5) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(1043,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(1045,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(1058,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1027,1):remark #34051: REGISTER ALLOCATION : [write_values] d2q9-bgk.c:1027

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   27[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm11]
        
    Routine temporaries
        Total         :     157
            Global    :      37
            Local     :     120
        Regenerable   :      45
        Spilled       :      13
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      64 bytes*
            Reads     :       9 [5.21e+00 ~ 5.2%]
            Writes    :       8 [1.43e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: timestep(const t_param, s_speed *, s_speed *, int *, m_info, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (timestep(const t_param, s_speed *, s_speed *, int *, m_info, int))
  -> INLINE: (283,5) exchange_halos(const t_param, const s_speed *, s_speed *, m_info)
  -> (287,5) accelerate_flow(const t_param, const s_speed *__restrict__, const int *)
  -> (289,20) pro_re_col_av(const t_param, const s_speed *, s_speed *, const int *, m_info, int)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(287,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(289,20):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(289,20):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(292,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(293,13):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(294,16):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(280,1):remark #34051: REGISTER ALLOCATION : [timestep] d2q9-bgk.c:280

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :      98
            Global    :      18
            Local     :      80
        Regenerable   :      29
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: collate_data(const t_param, const s_speed *, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (collate_data(const t_param, const s_speed *, m_info))
  -> INLINE: (319,7) compute_rank_info(int, int, m_info *, t_param)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(301,79):remark #34051: REGISTER ALLOCATION : [collate_data] d2q9-bgk.c:301

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :      50
            Global    :      18
            Local     :      32
        Regenerable   :      12
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       7 [6.65e-01 ~ 0.7%]
            Writes    :       7 [6.65e-01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: collate_vels(const t_param, decimal **, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (collate_vels(const t_param, decimal **, m_info))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(338,76):remark #34051: REGISTER ALLOCATION : [collate_vels] d2q9-bgk.c:338

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rsi rdi r8-r9 r15]
        
    Routine temporaries
        Total         :      24
            Global    :       9
            Local     :      15
        Regenerable   :       7
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: compute_rank_info(int, int, m_info *, t_param)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compute_rank_info(int, int, m_info *, t_param))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(399,77):remark #34051: REGISTER ALLOCATION : [compute_rank_info] d2q9-bgk.c:399

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      28
            Global    :      13
            Local     :      15
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: exchange_halos(const t_param, const s_speed *, s_speed *, m_info)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (exchange_halos(const t_param, const s_speed *, s_speed *, m_info))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(434,101):remark #34051: REGISTER ALLOCATION : [exchange_halos] d2q9-bgk.c:434

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rsi rdi r8-r14]
        
    Routine temporaries
        Total         :      62
            Global    :      12
            Local     :      50
        Regenerable   :      20
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: nb_unoccupied_cells(const t_param, s_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (nb_unoccupied_cells(const t_param, s_speed *, int *))


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(718,3)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(719,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(722,5)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(722,5)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(713,1):remark #34051: REGISTER ALLOCATION : [nb_unoccupied_cells] d2q9-bgk.c:713

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     179
            Global    :      32
            Local     :     147
        Regenerable   :      71
        Spilled       :       2
        
    Routine stack
        Variables     :      48 bytes*
            Reads     :       7 [4.85e-01 ~ 0.5%]
            Writes    :       9 [6.52e+00 ~ 6.5%]
        Spills        :      64 bytes*
            Reads     :      20 [3.35e+00 ~ 3.3%]
            Writes    :      20 [6.26e+00 ~ 6.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: av_velocity(const t_param, s_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (av_velocity(const t_param, s_speed *, int *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(746,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(748,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(756,9)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(738,1):remark #34051: REGISTER ALLOCATION : [av_velocity] d2q9-bgk.c:738

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   28[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :      79
            Global    :      21
            Local     :      58
        Regenerable   :       4
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       7 [1.03e+00 ~ 1.0%]
            Writes    :       7 [1.03e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: finalise(const t_param *, s_speed *, s_speed *, int **, decimal **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (finalise(const t_param *, s_speed *, s_speed *, int **, decimal **))
  -> INLINE: (976,6) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (977,6) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (987,5) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (988,5) _mm_free(void *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(973,14)
   remark #25436: completely unrolled by 9  
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(969,1):remark #34051: REGISTER ALLOCATION : [finalise] d2q9-bgk.c:969

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r8 r12-r13 r15]
        
    Routine temporaries
        Total         :      57
            Global    :      11
            Local     :      46
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: calc_reynolds(const t_param, s_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_reynolds(const t_param, s_speed *, int *))
  -> INLINE: (1005,10) av_velocity(const t_param, s_speed *, int *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(746,3) inlined into d2q9-bgk.c(1005,10)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(748,5) inlined into d2q9-bgk.c(1005,10)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(756,9) inlined into d2q9-bgk.c(1005,10)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1002,1):remark #34051: REGISTER ALLOCATION : [calc_reynolds] d2q9-bgk.c:1002

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm14]
        
    Routine temporaries
        Total         :      86
            Global    :      22
            Local     :      64
        Regenerable   :       6
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       7 [1.01e+00 ~ 1.0%]
            Writes    :       7 [1.01e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: total_density(const t_param, const s_speed *__restrict__)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (total_density(const t_param, const s_speed *__restrict__))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(1016,7)
   remark #25444: Loopnest Interchanged: ( 1 2 3 ) --> ( 3 1 2 )

   LOOP BEGIN at d2q9-bgk.c(1012,3)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(1014,5)
         remark #15301: PERMUTED LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(1014,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1009,1):remark #34051: REGISTER ALLOCATION : [total_density] d2q9-bgk.c:1009

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rsi rdi r8-r12 zmm0-zmm3]
        
    Routine temporaries
        Total         :      30
            Global    :      20
            Local     :      10
        Regenerable   :       3
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: die(const char *, const int, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (die(const char *, const int, const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1110,1):remark #34051: REGISTER ALLOCATION : [die] d2q9-bgk.c:1110

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbx rsi rdi]
        
    Routine temporaries
        Total         :      28
            Global    :       1
            Local     :      27
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: usage(const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (usage(const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1118,1):remark #34051: REGISTER ALLOCATION : [usage] d2q9-bgk.c:1118

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       0
            Local     :      15
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initialise(const char *, const char *, t_param *, s_speed *, s_speed *, int **, decimal **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialise(const char *, const char *, t_param *, s_speed *, s_speed *, int **, decimal **))
  -> INLINE: (808,5) die(const char *, const int, const char *)
  -> INLINE: (814,20) die(const char *, const int, const char *)
  -> INLINE: (818,20) die(const char *, const int, const char *)
  -> INLINE: (822,20) die(const char *, const int, const char *)
  -> INLINE: (826,20) die(const char *, const int, const char *)
  -> INLINE: (830,20) die(const char *, const int, const char *)
  -> INLINE: (834,20) die(const char *, const int, const char *)
  -> INLINE: (838,20) die(const char *, const int, const char *)
  -> INLINE: (867,40) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (872,34) die(const char *, const int, const char *)
  -> INLINE: (878,44) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,38) die(const char *, const int, const char *)
  -> INLINE: (887,29) _mm_malloc(size_t, size_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (891,31) die(const char *, const int, const char *)
  -> INLINE: (936,5) die(const char *, const int, const char *)
  -> INLINE: (943,22) die(const char *, const int, const char *)
  -> INLINE: (945,40) die(const char *, const int, const char *)
  -> INLINE: (947,40) die(const char *, const int, const char *)
  -> INLINE: (949,23) die(const char *, const int, const char *)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(898,3)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED
OpenMP Construct at d2q9-bgk.c(920,3)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(864,3)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(875,3)
   remark #25436: completely unrolled by 9  
LOOP END

LOOP BEGIN at d2q9-bgk.c(899,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(902,5)
   <Peeled loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(902,5)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(902,5)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(921,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(924,5)
      remark #15301: SIMD LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(924,5)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(795,1):remark #34051: REGISTER ALLOCATION : [initialise] d2q9-bgk.c:795

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   21[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     944
            Global    :     164
            Local     :     780
        Regenerable   :     365
        Spilled       :      17
        
    Routine stack
        Variables     :    1156 bytes*
            Reads     :      70 [5.12e+00 ~ 5.1%]
            Writes    :      15 [1.87e+00 ~ 1.9%]
        Spills        :     184 bytes*
            Reads     :      46 [2.24e+00 ~ 2.2%]
            Writes    :      40 [2.48e+00 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
